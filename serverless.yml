service: kdti-backend

provider:
    name: aws
    region: us-east-1
    runtime: provided
    versionFunctions: false
    environment:
        APP_ENV: ${opt:stage}
        DATABASE_URL: mysql://kdtiadmin:${ssm:/kdti/database-password}@kdti-db.cq08e7zurr6v.us-east-1.rds.amazonaws.com/kdtidb
        SENTRY_DSN: ${ssm:/kdti/${opt:stage}/sentry-dsn}
        CORS_ALLOW_ORIGIN: ${ssm:/kdti/${opt:stage}/cors, ''}
        JWT_SECRET_KEY: ${ssm:/kdti/${opt:stage}/jwt-private, ''}
        JWT_PUBLIC_KEY: ${ssm:/kdti/${opt:stage}/jwt-public, ''}
        JWT_PASSPHRASE: ${ssm:/kdti/${opt:stage}/jwt-passphrase, ''}

plugins:
    - ./vendor/bref/bref

package:
    exclude:
        - 'tests/**'
        - 'public/**'
    include:
        - 'public/index.php'

functions:
    api:
        handler: public/index.php
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        layers:
            - ${bref:layer.php-73-fpm}
        events:
            - http: 'ANY /'
            - http: 'ANY /{proxy+}'
            - schedule:
                  rate: rate(5 minutes)
                  input:
                      warmer: true
        vpc:
            securityGroupIds:
                - sg-28f5537d
            subnetIds:
                - subnet-c41c4bfa
                - subnet-923232f5
                - subnet-1aa2af46
                - subnet-afb5ba81
                - subnet-8c4090c1
                - subnet-b305ffbd
    console:
        handler: bin/console
        timeout: 120 # in seconds
        layers:
            - ${bref:layer.php-73} # PHP
            - ${bref:layer.console} # The "console" layer
        vpc:
            securityGroupIds:
                - sg-28f5537d
            subnetIds:
                - subnet-c41c4bfa
                - subnet-923232f5
                - subnet-1aa2af46
                - subnet-afb5ba81
                - subnet-8c4090c1
                - subnet-b305ffbd
resources:
    Resources:
        # The S3 bucket that stores the assets
        Assets:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: kdti-statics-${opt:stage}
                CorsConfiguration:
                    CorsRules:
                        -   AllowedHeaders: ["*"]
                            AllowedMethods: [GET]
                            AllowedOrigins: ["*"]
        AssetsBucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket: !Ref Assets # References the bucket we defined above
                PolicyDocument:
                    Statement:
                        -   Effect: Allow
                            Principal: '*' # everyone
                            Action: 's3:GetObject' # to read
                            Resource: 'arn:aws:s3:::kdti-statics-${opt:stage}/*' # things in it
